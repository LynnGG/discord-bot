from discord.ext.commands import Bot
from discord.ext import commands
from discord_components import Button,Select,SelectOption,ComponentsBot

import discord
import random
import asyncio
import os
from dotenv import load_dotenv
from discord.ext import commands

def main():
    load_dotenv()
    bot = ComponentsBot("$")


    @bot.event
    async def on_ready(): 
      print('ƒëang ch·∫°y $$$$$$$$$$$$$$$ ')

    @bot.command()
    async def said(ctx, arg):
        await ctx.send(f"ƒê·ª§ ƒê·ªà M·∫∏ M√ÄY {arg}")
        await ctx.send(f"ƒê·ª§ ƒê·ªà M·∫∏ M√ÄY {arg}")
        await ctx.send(f"ƒê·ª§ ƒê·ªà M·∫∏ M√ÄY {arg}")

    @bot.command()
    async def tag(ctx,  member : discord.Member):
        if(str(member.mention) !="<@815925691580940298>"):
            await member.send(f'Hahahahaaaaaa B√ö CU {ctx.author.name} KO \n'*50)
            await ctx.send('ƒê√£ Tag')
        else:
            await ctx.send(f'ƒê·ªà M·∫∏ M TH√çCH TAG {member.mention} KH√îNG TH·∫∞NG L·ªíN {ctx.author.name} ? ')

    @bot.command()
    async def Ngu(ctx, arg):
        await ctx.send(f"ƒê·ª§ ƒê·ªà M·∫∏ M√ÄY SAO M√ÄY B·∫ÆN NGU V√ÉI L·ªíN V·∫¨Y {arg}")
        await ctx.send("CON CH√ì CH∆†I C√íN HAY H∆†N M√ÄY ƒê·ª§ M·∫∏")
    @bot.command()
    async def imgirl(ctx, arg):
        embed = discord.Embed(
          title='Em l√† con g√°i !',
          description=f'Y√™u em kh√¥ng anh {arg}',
          color=0x1abc9c
        )
        msg =await ctx.send(embed=embed)
        await msg.add_reaction('üíñ')


    @bot.command()
    async def ban(ctx, member : discord.Member, *, reason = None):
        await member.ban(reason = reason)

    @bot.command()
    async def unban(ctx, *, user=None):

        try:
            user = await bot.converter.UserConverter().convert(ctx, user)
        except:
            await ctx.send("Error: user could not be found!")
            return

        try:
            bans = tuple(ban_entry.user for ban_entry in await ctx.guild.bans())
            if user in bans:
                await ctx.guild.unban(user, reason="Responsible moderator: "+ str(ctx.author))
            else:
                await ctx.send("User not banned!")
                return

        except discord.Forbidden:
            await ctx.send("I do not have permission to unban!")
            return

        except:
            await ctx.send("Unbanning failed!")
            return

        await ctx.send(f"Successfully unbanned {user.mention}!")

    @bot.command()
    async def hello_bot(ctx):
        await ctx.send(f'hello c√°i l·ªìn m·∫π m√†y {ctx.author.name}!')
    @bot.command()
    async def helpcoder(ctx):
        await ctx.send('http://facebook.com/LynnOwO')



    @bot.command()   
    async def ailatrieuphu(ctx):
        a = 1
        cauhoi={
                  "1":{"T√™n ƒê·∫ßu Ti√™n B√°c H·ªì L√† G:"
                      +"\n"+"1.Nguy·ªÖn Sinh Cung"
                  +"\n"+"2.Nguy·ªÖn Sinh C√¥n"
                  +"\n"+"3.Nguy·ªÖn T·∫•t Th√†nh"
                  +"\n"+"4.Nguy·ªÖn VƒÉn Th√†nh"
                    :{'1'}},

                  "2":{"Khi Code Web Code Tr√™n G√¨ ? :"
                      +"\n"+"1.html"
                  +"\n"+"2.Css"
                  +"\n"+"3.Js"
                  +"\n"+"4.C++" 
                          :{'1'}},

                  "3":{"trong oop mu·ªën k·∫øt th·ª´a methord l√†m sao?"
                      +"\n"+"1.super"
                  +"\n"+"2.extends"
                  +"\n"+"3.√âp ki·ªÉu object "
                  +"\n"+"4.Constructor " 
                      :{'1'}},

                  "4":{"Li√™n K·∫øt ƒê∆°n g·ªìm g√¨ ? :"
                      +"\n"+"1.data next"
                  +"\n"+"2.pre data next"
                  +"\n"+"3.data"
                  +"\n"+"4.next pre" 
                          :{'1'}},

                  "5":{"2 s·ªë cu·ªëi c·ªßa 100^15 l√† bao nhi√™u :"
                      +"\n"+"1. 00"
                  +"\n"+"2. 20"
                  +"\n"+"3. 40"
                  +"\n"+"4. 60" 
                          :{'1'}},

                  "6":{"Nguy√™n H√†m c·ªßa sin(x) :"
                      +"\n"+"1. cos(x)"
                  +"\n"+"2. 1/sin(x)"
                  +"\n"+"3. -1/con(x)"
                  +"\n"+"4.-cot(x)*sin(x)" 
                          :{'4'}},
                "7":{"Nguy√™n H√†m c·ªßa Cos(x) :"
                      +"\n"+"1. cos(x)"
                  +"\n"+"2. 1/sin(x)"
                  +"\n"+"3. -1/con(x)"
                  +"\n"+"4.-cot(x)*sin(x)" 
                          :{'4'}},
                "8":{"ƒê·ªãa danh ƒê·∫Øk T√¥ v·ªõi nh·ªØng tr·∫≠n ƒë√°nh n·ªïi ti·∫øng trong kh√°ng chi·∫øn ch·ªëng M·ªπ thu·ªôc t·ªânh n√†o c·ªßa khu v·ª±c T√¢y Nguy√™n? :"
                    +"\n"+"1.ƒê·∫Øk L·∫Øk"
                    +"\n"+"2.Gia Lai"
                    +"\n"+"3.Kon Tum"
                    +"\n"+"4.ƒê·∫Øk N√¥ng" 
                      :{'3'}},   
                "9":{"ƒê√¢u l√† t√™n m·ªôt lo·∫°i b√°nh n·ªïi ti·∫øng ·ªü Hu·∫ø? :"
                      +"\n"+"1.Kho√°i"
                  +"\n"+"2. Th√≠ch"
                  +"\n"+"3. Vui"
                  +"\n"+"4. S∆∞·ªõng" 
                          :{'1'}},		
                "10":{"B·ªô phim Ch·ªã D·∫≠u ƒë∆∞·ª£c chuy·ªÉn th·ªÉ t·ª´ t√°c ph·∫©m n√†o? :"
                      +"\n"+"1.Ng∆∞·ªùi m·∫π c·∫ßm s√∫ng"
                  +"\n"+"2. T·∫Øt ƒë√®n"
                  +"\n"+"3.V·ª£ ch·ªìng A Ph·ªß"
                  +"\n"+"4.Tu·ªïi th∆° d·ªØ d·ªôi" 
                          :{'2'}},
                "11":{"Cho t·ªõi th·ªùi ƒëi·ªÉm hi·ªán nay, v∆∞·ªùn qu·ªëc gia n√†o c·ªßa n∆∞·ªõc ta ch∆∞a ƒë∆∞·ª£c c√¥ng nh·∫≠n l√† V∆∞·ªùn Di s·∫£n ASEAN? :"
                      +"\n"+"1.V∆∞·ªùn qu·ªëc gia Kon Ka Kinh"
                  +"\n"+"2. V∆∞·ªùn qu·ªëc gia Ch∆∞ Mom Ray"
                  +"\n"+"3.V∆∞·ªùn qu·ªëc gia Tam ƒê·∫£o"
                  +"\n"+"4.V∆∞·ªùn qu·ªëc gia B√°i T·ª≠ Long" 
                          :{'3'}},	
                "12":{"Hoa h·∫≠u H√≤a b√¨nh Qu·ªëc t·∫ø 2017 d·ª± ki·∫øn s·∫Ω ƒë∆∞·ª£c t·ªï ch·ª©c t·∫°i qu·ªëc gia n√†o?:"
                      +"\n"+"1. Th√°i Lan"
                  +"\n"+"2. Vi·ªát Nam"
                  +"\n"+"3. L√†o"
                  +"\n"+"4.Campuchia" 
                          :{'2'}},
                "13":{"Hoa h·∫≠u H√≤a b√¨nh Qu·ªëc t·∫ø 2017 d·ª± ki·∫øn s·∫Ω ƒë∆∞·ª£c t·ªï ch·ª©c t·∫°i qu·ªëc gia n√†o?:"
                      +"\n"+"1. Th√°i Lan"
                  +"\n"+"2. Vi·ªát Nam"
                  +"\n"+"3. L√†o"
                  +"\n"+"4.Campuchia" 
                          :{'2'}},
                "14":{"B·ªánh g√¨ b√°c s·ªπ b√≥ tay?:"
                      +"\n"+"1. ch·∫øt"
                  +"\n"+"2.ƒëau tim"
                  +"\n"+"3.ch·∫øt n√£o"
                  +"\n"+"4.g√£y tay" 
                          :{'4'}},
                "15":{"Trong harry potter ai ƒë·∫πp nh·∫•t?:"
                      +"\n"+"1.Oliver Wood"
                  +"\n"+"2.Draco Malfoy"
                  +"\n"+"3.Hermione Granger"
                  +"\n"+"4.Luna" 
                          :{'4'}},
                "16":{"Ai l√† Nh√¢n V·∫≠t Lynn gh√©t nh·∫•t?:"
                      +"\n"+"1.James Potter"
                  +"\n"+"2.Draco Malfoy"
                  +"\n"+"3.Tom Riddle"
                  +"\n"+"4.Ron Weasley" 
                          :{'4'}},
                "17":{"Ai X·ª©ng ƒë√°ng l√†m nyc c·ªßa Zuker?:"
                      +"\n"+"1.hermione granger"
                  +"\n"+"2.Draco Malfoy"
                  +"\n"+"3.Tom Riddle"
                  +"\n"+"4.Ron Weasley" 
                          :{'4'}},	
                "18":{"Ai X·ª©ng ƒë√°ng l√†m nyc c·ªßa Zuker?:"
                      +"\n"+"1.hermione granger"
                  +"\n"+"2.Draco Malfoy"
                  +"\n"+"3.Tom Riddle"
                  +"\n"+"4.Ron Weasley" 
                          :{'4'}},
                "19":{"Trong NaruTo Ai ƒë√°ng Th∆∞∆°ng nh·∫•t?:"
                      +"\n"+"1.madara"
                  +"\n"+"2.obito"
                  +"\n"+"3.naruto"
                  +"\n"+"4.pain" 
                          :{'2'}},
                "20":{"Trong NaruTo Ai ƒë√°ng Gh√©t nh·∫•t?:"
                      +"\n"+"1.sakura"
                  +"\n"+"2.madara"
                  +"\n"+"3.sasuke"
                  +"\n"+"4.naruto" 
                          :{'1'}},					
              }
        while True:
            i=random.randint(1,20)
            if str(i) not in cauhoi:
                continue
            else:
                await ctx.send('-----c√¢u '+str(a)+'---------')
                for x in cauhoi[str(i)].keys():
                    await ctx.send(x)   

                    await ctx.send('ƒê√°p √Ån !',components=[Select(
                        placeholder='Ch·ªçn ! ',
                        options =[
                        SelectOption(label ='1',value='1'),
                        SelectOption(label ='2',value='2'),
                        SelectOption(label ='3',value='3'),
                        SelectOption(label ='4',value='4'),
                        ],
                        custom_id='selectTesting'
                    )])
                    interaction = await bot.wait_for("select_option", check = lambda i: i.custom_id=='selectTesting')
                    for x in cauhoi[str(i)].values():
                        if str('{\''+interaction.values[0]+'\'}') == str(x) :
                            await ctx.send(f"√ä {interaction.author} GI·ªéI !!!!")
                            a= a+1
                            del cauhoi[str(i)]
                        else:
                            await ctx.send(f"L·ªíN {interaction.author} NGU NH∆Ø C·∫∂C V·∫¨Y")
                            await asyncio.sleep(int(2))
                            await ctx.channel.purge(limit=a*4)
                            await ctx.send(f"TH·∫∞NG G√Ä {interaction.author} TR·∫¢ L·ªúI ƒêC {a-1} C√¢u !")
                            return
    @bot.command()
    async def dktuoilon(ctx):
        await ctx.send("DK C√ì TU·ªîI NH∆ØNG TU·ªîI L·ªíN !\n"*55)
    @bot.command()
    async def clear(ctx):
        await ctx.channel.purge(limit=100)    
    @bot.command()
    async def mutetime(ctx, member: discord.Member=None, time=None, *, reason=None):
        if(str(member.mention) !="<@815925691580940298>"):
            if not member:
                await ctx.send("You must mention a member to mute!")
            elif not time:
                await ctx.send("You must mention a time!")
            else:
                if not reason:
                    reason="No reason given"
                #Now timed mute manipulation
                try:
                    seconds = time[:-1] #Gets the numbers from the time argument, start to -1
                    duration = time[-1] #Gets the timed maniulation, s, m, h, d
                    if duration == "s":
                        seconds = seconds * 1
                    elif duration == "m":
                        seconds = seconds * 60
                    elif duration == "h":
                        seconds = seconds * 60 * 60
                    elif duration == "d":
                        seconds = seconds * 86400
                    else:
                        await ctx.send("Invalid duration input")
                        return
                except Exception as e:
                    print(e)
                    await ctx.send("Invalid time input")
                    return
            guild = ctx.guild
            Muted = discord.utils.get(guild.roles, name="Muted")
            if not Muted:
                Muted = await guild.create_role(name="Muted")
                for channel in guild.channels:
                    await channel.set_permissions(Muted, speak=False, send_messages=False, read_message_history=True, read_messages=False)
            await member.add_roles(Muted, reason=reason)
            muted_embed = discord.Embed(title="ƒê√É KH√ìA M·ªíM", description=f"{member.mention} M√ÄY ƒê√É B·ªä KH√ìA M·ªíM B·ªûI {ctx.author.mention} for {reason} to {time}")
            await ctx.send(embed=muted_embed)
            await asyncio.sleep(int(seconds))
            await member.remove_roles(Muted)
            unmute_embed = discord.Embed(title="Mute over!", description=f'{ctx.author.mention} muted to {member.mention} for {reason} is over after {time}')
            await ctx.send(embed=unmute_embed)
        else:
            await ctx.send(f"B·ªê M√ÄY CH·ª¶ BOT OKE {ctx.author.name}")
    @bot.command()
    async def mute(ctx,member : discord.Member):
        if(str(member.mention) !="<@815925691580940298>"):
            guild = ctx.guild
            muteRole = discord.utils.get(guild.roles,name ="Muted")
            if muteRole in guild.roles:
                pass
            else:
                muteRole =await guild.create_role(name = "Muted")
                for channel in ctx.guild.channels:
                    await channel.set_permissions(muteRole, send_messages=False, read_messages=True, read_message_history=True)
        else:
            await ctx.send(f"B·ªê M√ÄY CH·ª¶ BOT OKE {ctx.author.name}") 
        await member.add_roles(muteRole)
        await ctx.send(f'ƒê√É KH√ìA M·ªíM {member.mention}')

    @bot.command()
    async def unmute(ctx,member : discord.Member):
        guild = ctx.guild
        muteRole = discord.utils.get(guild.roles,name ="Muted")
        await member.remove_roles(muteRole)

        await ctx.send(f"ƒê√É M·ªû M·ªíM {member.mention}")

        await member.send(f'M√ÄY V·ª™A ƒê∆Ø·ª¢C M·ªû M·ªíM ')
    @bot.command()
    async def addadmin(ctx,member : discord.Member):
        guild = ctx.guild
        admin = discord.utils.get(guild.roles,name ="Tr√πm")
        await member.add_roles(admin)
    @bot.command()
    async def helpme(ctx):
        embed = discord.Embed(
          title='L·ªÜNH ƒê√çT BOT LYNN !!!',
          description=('COMMANDS \n\n:'
                      '1. $said {name}\n'
                      '2. $ban {name}{c·∫•m d√πng ch∆∞a fix}\n'
                      '3. $unban {name}{c·∫•m d√πng ch∆∞a fix}\n'
                      '4. $hello_bot\n'
                      '5. $helpcoder\n'
                      '6. $bucu {name}\n'
                      '7. $imgirl {name}\n'
                      '8. $Ngu {name}\n'
                      '9. $mute {name}\n'
                      '10. $ailatrieuphu\n'
                      '11. $clear\n'
                      '12. $dktuoilon {name}\n'
                      '13. $unmute {name}\n'),

          color=0xFF0000
        )
        msg = await ctx.send(embed=embed)
        await msg.add_reaction('üëç')
        await msg.add_reaction('üëé')


    @bot.command()
    async def bucu(ctx,arg):
        text= [f'awwwwww awwwwwww cu anh to qu√° em n·ª©ng qu√° anh  {arg} , Awwww awwww ra trong m·ªìm em ƒëi anh ∆°i awwwwwww'
        ,f'ƒê√©o Th√®m nhi·ªÅu tinh trong m·ªìm b·ªë m√†y qu√° r·ªìi ƒë·ª£i x√≠u em l√†m hi·ªáp 2 v·ªõi anh nha {arg} hihiii',
        f'√à con cu x√≠u xiu hihiii cute ƒë√≥ anh {arg} hihiii']
        index = random.randint(0,3)
        await ctx.send(text[index])
    
    bot.run(os.getenv('DISCORD_TOKEN'))

if __name__ == '__main__':
    main()
